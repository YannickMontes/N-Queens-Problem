/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import java.awt.Point;
import java.util.ArrayList;
import n.queens.problem.FitnessEnum;
import javax.swing.DefaultComboBoxModel;
import metaheuristics.Genetic;
import metaheuristics.GeneticImproved;
import metaheuristics.SimulatingAnnealing;
import metaheuristics.TabuSearch;
import n.queens.problem.Chessboard;

/**
 *
 * @author yannick
 */
public class MainWindow extends javax.swing.JFrame
{
    private Chessboard lastResult;
    /**
     * Creates new form MainWindow
     */
    public MainWindow()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        chessSizeLabel = new javax.swing.JLabel();
        chessSizeField = new javax.swing.JTextField();
        methodPane = new javax.swing.JTabbedPane();
        annealingPanel = new javax.swing.JPanel();
        simuAnnealingLabel = new javax.swing.JLabel();
        maxIterationsAnnealingLabel = new javax.swing.JLabel();
        maxIterationsAnnealingField = new javax.swing.JTextField();
        temperatureThresholdLabel = new javax.swing.JLabel();
        temperatureThresholdField = new javax.swing.JTextField();
        temperatureVariationMulLabel = new javax.swing.JLabel();
        temperatureVariationMulField = new javax.swing.JTextField();
        fitnessChoosenAnnealingLabel = new javax.swing.JLabel();
        fitnessChoosenAnnealing = new javax.swing.JComboBox<>();
        runAnnealing = new javax.swing.JButton();
        executionTimeAnnealingLabel = new javax.swing.JLabel();
        executionTimeAnnealing = new javax.swing.JLabel();
        bestFitnessAnnealingLabel = new javax.swing.JLabel();
        bestFitnessAnnealing = new javax.swing.JLabel();
        withSolutionAnnealingLabel = new javax.swing.JLabel();
        solutionAnnealing = new javax.swing.JLabel();
        fitnessCurveAnnealingButton = new javax.swing.JButton();
        showSolutionAnnealingButton = new javax.swing.JButton();
        acceptanceProbaLabel = new javax.swing.JLabel();
        acceptanceProba = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        tabuSearchLabel = new javax.swing.JLabel();
        maxIterationsTabuLabel = new javax.swing.JLabel();
        maxIterationsTabuField = new javax.swing.JTextField();
        tabuListSizeField = new javax.swing.JTextField();
        tabuListSizeLabel = new javax.swing.JLabel();
        fitnessChoosenTabuLabel = new javax.swing.JLabel();
        fitnessChoosenTabu = new javax.swing.JComboBox<>();
        runTabu = new javax.swing.JButton();
        withSolutionTabuLabel = new javax.swing.JLabel();
        bestFitnessTabu = new javax.swing.JLabel();
        solutionTabu = new javax.swing.JLabel();
        executionTimeTabu = new javax.swing.JLabel();
        bestFitnessTabuLabel = new javax.swing.JLabel();
        executionTimeTabuLabel = new javax.swing.JLabel();
        fitnessCurveTabuButton = new javax.swing.JButton();
        showSolutionTabuButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        populationSizeGenetic = new javax.swing.JTextField();
        populationSizeGeneticLabel = new javax.swing.JLabel();
        maxIterationsGeneticLabel = new javax.swing.JLabel();
        maxIterationsGeneticField = new javax.swing.JTextField();
        tabuSearchLabel1 = new javax.swing.JLabel();
        runGenetic = new javax.swing.JButton();
        solutionGenetic = new javax.swing.JLabel();
        withSolutionTabuLabel1 = new javax.swing.JLabel();
        bestFitnessGenetic = new javax.swing.JLabel();
        bestFitnessGeneticLabel = new javax.swing.JLabel();
        executionTimeGeneticLabel = new javax.swing.JLabel();
        executionTimeGenetic = new javax.swing.JLabel();
        mutationProbaGeneticLabel = new javax.swing.JLabel();
        mutationProbability = new javax.swing.JTextField();
        fitnessChoosenGenetic = new javax.swing.JComboBox<>();
        fitnessChoosenGeneticLabel = new javax.swing.JLabel();
        fitnessCurveGeneticButton = new javax.swing.JButton();
        showSolutionGeneticButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("N Queens problem");
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        chessSizeLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chessSizeLabel.setText("Size of the chessboard (= queens number)");

        chessSizeField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chessSizeField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        chessSizeField.setToolTipText("i.e. 8");
        chessSizeField.setMinimumSize(new java.awt.Dimension(4, 30));
        chessSizeField.setPreferredSize(new java.awt.Dimension(4, 30));

        simuAnnealingLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        simuAnnealingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        simuAnnealingLabel.setText("Simulated Annealing");

        maxIterationsAnnealingLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        maxIterationsAnnealingLabel.setText("Max number of iterations");
        maxIterationsAnnealingLabel.setMaximumSize(new java.awt.Dimension(170, 30));
        maxIterationsAnnealingLabel.setMinimumSize(new java.awt.Dimension(170, 30));

        maxIterationsAnnealingField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        maxIterationsAnnealingField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        maxIterationsAnnealingField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                maxIterationsAnnealingFieldActionPerformed(evt);
            }
        });

        temperatureThresholdLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        temperatureThresholdLabel.setText("Temperature stopping threshold");
        temperatureThresholdLabel.setMaximumSize(new java.awt.Dimension(225, 30));
        temperatureThresholdLabel.setMinimumSize(new java.awt.Dimension(225, 30));
        temperatureThresholdLabel.setPreferredSize(new java.awt.Dimension(225, 30));

        temperatureThresholdField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        temperatureThresholdField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        temperatureThresholdField.setToolTipText("");

        temperatureVariationMulLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        temperatureVariationMulLabel.setText("Temperature variation multiplier");
        temperatureVariationMulLabel.setMaximumSize(new java.awt.Dimension(217, 30));
        temperatureVariationMulLabel.setMinimumSize(new java.awt.Dimension(217, 30));
        temperatureVariationMulLabel.setPreferredSize(new java.awt.Dimension(217, 30));

        temperatureVariationMulField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        temperatureVariationMulField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        temperatureVariationMulField.setMinimumSize(new java.awt.Dimension(4, 30));
        temperatureVariationMulField.setPreferredSize(new java.awt.Dimension(78, 30));

        fitnessChoosenAnnealingLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessChoosenAnnealingLabel.setText("Fitness type");

        fitnessChoosenAnnealing.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessChoosenAnnealing.setModel(new DefaultComboBoxModel<>(FitnessEnum.values()));

        runAnnealing.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        runAnnealing.setText("RUN");
        runAnnealing.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                runAnnealingActionPerformed(evt);
            }
        });

        executionTimeAnnealingLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        executionTimeAnnealingLabel.setText("Execution time ");
        executionTimeAnnealingLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        executionTimeAnnealing.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        executionTimeAnnealing.setText("0 ms");
        executionTimeAnnealing.setPreferredSize(new java.awt.Dimension(30, 30));

        bestFitnessAnnealingLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bestFitnessAnnealingLabel.setText("Best fitness found");
        bestFitnessAnnealingLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        bestFitnessAnnealing.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bestFitnessAnnealing.setText("0");
        bestFitnessAnnealing.setPreferredSize(new java.awt.Dimension(30, 30));

        withSolutionAnnealingLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        withSolutionAnnealingLabel.setText("with solution");
        withSolutionAnnealingLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        solutionAnnealing.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        solutionAnnealing.setPreferredSize(new java.awt.Dimension(30, 30));

        fitnessCurveAnnealingButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessCurveAnnealingButton.setText("Show fitness curve");
        fitnessCurveAnnealingButton.setEnabled(false);
        fitnessCurveAnnealingButton.setMaximumSize(new java.awt.Dimension(164, 30));
        fitnessCurveAnnealingButton.setMinimumSize(new java.awt.Dimension(164, 30));
        fitnessCurveAnnealingButton.setPreferredSize(new java.awt.Dimension(164, 30));
        fitnessCurveAnnealingButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fitnessCurveAnnealingButtonActionPerformed(evt);
            }
        });

        showSolutionAnnealingButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        showSolutionAnnealingButton.setText("Show solution");
        showSolutionAnnealingButton.setEnabled(false);
        showSolutionAnnealingButton.setMaximumSize(new java.awt.Dimension(164, 30));
        showSolutionAnnealingButton.setMinimumSize(new java.awt.Dimension(164, 30));
        showSolutionAnnealingButton.setPreferredSize(new java.awt.Dimension(164, 30));
        showSolutionAnnealingButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                showSolutionAnnealingButtonActionPerformed(evt);
            }
        });

        acceptanceProbaLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        acceptanceProbaLabel.setText("Acceptance probability");
        acceptanceProbaLabel.setMaximumSize(new java.awt.Dimension(217, 30));
        acceptanceProbaLabel.setMinimumSize(new java.awt.Dimension(217, 30));
        acceptanceProbaLabel.setPreferredSize(new java.awt.Dimension(217, 30));

        acceptanceProba.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        acceptanceProba.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        acceptanceProba.setMinimumSize(new java.awt.Dimension(4, 30));
        acceptanceProba.setPreferredSize(new java.awt.Dimension(78, 30));
        acceptanceProba.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                acceptanceProbaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annealingPanelLayout = new javax.swing.GroupLayout(annealingPanel);
        annealingPanel.setLayout(annealingPanelLayout);
        annealingPanelLayout.setHorizontalGroup(
            annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annealingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(annealingPanelLayout.createSequentialGroup()
                        .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(annealingPanelLayout.createSequentialGroup()
                                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(runAnnealing)
                                    .addGroup(annealingPanelLayout.createSequentialGroup()
                                        .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, annealingPanelLayout.createSequentialGroup()
                                                .addComponent(bestFitnessAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(bestFitnessAnnealing, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, annealingPanelLayout.createSequentialGroup()
                                                .addComponent(executionTimeAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(68, 68, 68)
                                                .addComponent(executionTimeAnnealing, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(withSolutionAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(solutionAnnealing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(annealingPanelLayout.createSequentialGroup()
                                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(temperatureThresholdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxIterationsAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(temperatureVariationMulLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(simuAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(temperatureThresholdField)
                                        .addComponent(temperatureVariationMulField, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                        .addComponent(maxIterationsAnnealingField)
                                        .addComponent(acceptanceProba, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                        .addComponent(fitnessChoosenAnnealing, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 236, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(annealingPanelLayout.createSequentialGroup()
                        .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fitnessChoosenAnnealingLabel)
                            .addGroup(annealingPanelLayout.createSequentialGroup()
                                .addComponent(fitnessCurveAnnealingButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showSolutionAnnealingButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(acceptanceProbaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        annealingPanelLayout.setVerticalGroup(
            annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annealingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(simuAnnealingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxIterationsAnnealingField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxIterationsAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureThresholdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(temperatureThresholdField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureVariationMulLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(temperatureVariationMulField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptanceProbaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptanceProba, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(annealingPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(fitnessChoosenAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(annealingPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fitnessChoosenAnnealing, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(runAnnealing)
                .addGap(55, 55, 55)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executionTimeAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(executionTimeAnnealing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bestFitnessAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bestFitnessAnnealing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(withSolutionAnnealingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(solutionAnnealing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(annealingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fitnessCurveAnnealingButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showSolutionAnnealingButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        maxIterationsAnnealingField.setText(Integer.toString(SimulatingAnnealing.MAX_ITERATIONS));
        temperatureThresholdField.setText(Float.toString(SimulatingAnnealing.TEMPERATURE_STROPPING_THRESHOLD));
        temperatureVariationMulField.setText(Float.toString(SimulatingAnnealing.TEMPRATURE_VARIATION_MULTIPLIER));
        fitnessChoosenAnnealing.setSelectedItem(SimulatingAnnealing.FITNESS_TYPE);
        acceptanceProba.setText(Float.toString(SimulatingAnnealing.ACCEPTANCE_PROBA));

        methodPane.addTab("Simulated Annealing", annealingPanel);

        tabuSearchLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tabuSearchLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tabuSearchLabel.setText("Tabu Search");

        maxIterationsTabuLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        maxIterationsTabuLabel.setText("Max number of iterations");
        maxIterationsTabuLabel.setMaximumSize(new java.awt.Dimension(170, 30));
        maxIterationsTabuLabel.setMinimumSize(new java.awt.Dimension(170, 30));

        maxIterationsTabuField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        maxIterationsTabuField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        maxIterationsTabuField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                maxIterationsTabuFieldActionPerformed(evt);
            }
        });

        tabuListSizeField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tabuListSizeField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tabuListSizeField.setToolTipText("");

        tabuListSizeLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tabuListSizeLabel.setText("Size of the tabu list");
        tabuListSizeLabel.setMaximumSize(new java.awt.Dimension(225, 30));
        tabuListSizeLabel.setMinimumSize(new java.awt.Dimension(225, 30));
        tabuListSizeLabel.setPreferredSize(new java.awt.Dimension(225, 30));

        fitnessChoosenTabuLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessChoosenTabuLabel.setText("Fitness type");

        fitnessChoosenTabu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessChoosenTabu.setModel(new DefaultComboBoxModel<>(FitnessEnum.values()));

        runTabu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        runTabu.setText("RUN");
        runTabu.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                runTabuActionPerformed(evt);
            }
        });

        withSolutionTabuLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        withSolutionTabuLabel.setText("with solution");
        withSolutionTabuLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        bestFitnessTabu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bestFitnessTabu.setText("0");
        bestFitnessTabu.setPreferredSize(new java.awt.Dimension(30, 30));

        solutionTabu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        solutionTabu.setPreferredSize(new java.awt.Dimension(30, 30));

        executionTimeTabu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        executionTimeTabu.setText("0 ms");
        executionTimeTabu.setPreferredSize(new java.awt.Dimension(30, 30));

        bestFitnessTabuLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bestFitnessTabuLabel.setText("Best fitness found");
        bestFitnessTabuLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        executionTimeTabuLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        executionTimeTabuLabel.setText("Execution time ");
        executionTimeTabuLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        fitnessCurveTabuButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessCurveTabuButton.setText("Show fitness curve");
        fitnessCurveTabuButton.setEnabled(false);
        fitnessCurveTabuButton.setMaximumSize(new java.awt.Dimension(164, 30));
        fitnessCurveTabuButton.setMinimumSize(new java.awt.Dimension(164, 30));
        fitnessCurveTabuButton.setPreferredSize(new java.awt.Dimension(164, 30));
        fitnessCurveTabuButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fitnessCurveTabuButtonActionPerformed(evt);
            }
        });

        showSolutionTabuButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        showSolutionTabuButton.setText("Show solution");
        showSolutionTabuButton.setEnabled(false);
        showSolutionTabuButton.setMaximumSize(new java.awt.Dimension(164, 30));
        showSolutionTabuButton.setMinimumSize(new java.awt.Dimension(164, 30));
        showSolutionTabuButton.setPreferredSize(new java.awt.Dimension(164, 30));
        showSolutionTabuButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                showSolutionTabuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(261, Short.MAX_VALUE)
                .addComponent(tabuSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(236, 236, 236))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(bestFitnessTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bestFitnessTabu, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(executionTimeTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(executionTimeTabu, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(withSolutionTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(solutionTabu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tabuListSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fitnessChoosenTabuLabel)
                                    .addComponent(maxIterationsTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tabuListSizeField)
                                    .addComponent(maxIterationsTabuField)
                                    .addComponent(fitnessChoosenTabu, 0, 135, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(fitnessCurveTabuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showSolutionTabuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(runTabu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabuSearchLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxIterationsTabuField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxIterationsTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabuListSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabuListSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fitnessChoosenTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fitnessChoosenTabu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(runTabu)
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executionTimeTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(executionTimeTabu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bestFitnessTabu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(withSolutionTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionTabu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bestFitnessTabuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fitnessCurveTabuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showSolutionTabuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        maxIterationsTabuField.setText(Integer.toString(TabuSearch.MAX_ITERATIONS));
        tabuListSizeField.setText(Integer.toString(TabuSearch.TABU_LIST_SIZE));
        fitnessChoosenAnnealing.setSelectedItem(SimulatingAnnealing.FITNESS_TYPE);

        methodPane.addTab("Tabu Search", jPanel2);

        populationSizeGenetic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        populationSizeGenetic.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        populationSizeGenetic.setToolTipText("");

        populationSizeGeneticLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        populationSizeGeneticLabel.setText("Population size");
        populationSizeGeneticLabel.setMaximumSize(new java.awt.Dimension(225, 30));
        populationSizeGeneticLabel.setMinimumSize(new java.awt.Dimension(225, 30));
        populationSizeGeneticLabel.setPreferredSize(new java.awt.Dimension(225, 30));

        maxIterationsGeneticLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        maxIterationsGeneticLabel.setText("Max number of iterations");
        maxIterationsGeneticLabel.setMaximumSize(new java.awt.Dimension(170, 30));
        maxIterationsGeneticLabel.setMinimumSize(new java.awt.Dimension(170, 30));

        maxIterationsGeneticField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        maxIterationsGeneticField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        maxIterationsGeneticField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                maxIterationsGeneticFieldActionPerformed(evt);
            }
        });

        tabuSearchLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        tabuSearchLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tabuSearchLabel1.setText("Genetic Algorithm");

        runGenetic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        runGenetic.setText("RUN");
        runGenetic.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                runGeneticActionPerformed(evt);
            }
        });

        solutionGenetic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        solutionGenetic.setPreferredSize(new java.awt.Dimension(30, 30));

        withSolutionTabuLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        withSolutionTabuLabel1.setText("with solution");
        withSolutionTabuLabel1.setPreferredSize(new java.awt.Dimension(106, 30));

        bestFitnessGenetic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bestFitnessGenetic.setText("0");
        bestFitnessGenetic.setPreferredSize(new java.awt.Dimension(30, 30));

        bestFitnessGeneticLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bestFitnessGeneticLabel.setText("Best fitness found");
        bestFitnessGeneticLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        executionTimeGeneticLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        executionTimeGeneticLabel.setText("Execution time ");
        executionTimeGeneticLabel.setPreferredSize(new java.awt.Dimension(106, 30));

        executionTimeGenetic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        executionTimeGenetic.setText("0 ms");
        executionTimeGenetic.setPreferredSize(new java.awt.Dimension(30, 30));

        mutationProbaGeneticLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        mutationProbaGeneticLabel.setText("Mutation probability");
        mutationProbaGeneticLabel.setMaximumSize(new java.awt.Dimension(225, 30));
        mutationProbaGeneticLabel.setMinimumSize(new java.awt.Dimension(225, 30));
        mutationProbaGeneticLabel.setPreferredSize(new java.awt.Dimension(225, 30));

        mutationProbability.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        mutationProbability.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        mutationProbability.setToolTipText("");

        fitnessChoosenGenetic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessChoosenGenetic.setModel(new DefaultComboBoxModel<>(FitnessEnum.values()));

        fitnessChoosenGeneticLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessChoosenGeneticLabel.setText("Fitness type");

        fitnessCurveGeneticButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fitnessCurveGeneticButton.setText("Show fitness curve");
        fitnessCurveGeneticButton.setEnabled(false);
        fitnessCurveGeneticButton.setMaximumSize(new java.awt.Dimension(164, 30));
        fitnessCurveGeneticButton.setMinimumSize(new java.awt.Dimension(164, 30));
        fitnessCurveGeneticButton.setPreferredSize(new java.awt.Dimension(164, 30));
        fitnessCurveGeneticButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fitnessCurveGeneticButtonActionPerformed(evt);
            }
        });

        showSolutionGeneticButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        showSolutionGeneticButton.setText("Show solution");
        showSolutionGeneticButton.setEnabled(false);
        showSolutionGeneticButton.setMaximumSize(new java.awt.Dimension(164, 30));
        showSolutionGeneticButton.setMinimumSize(new java.awt.Dimension(164, 30));
        showSolutionGeneticButton.setPreferredSize(new java.awt.Dimension(164, 30));
        showSolutionGeneticButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                showSolutionGeneticButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(populationSizeGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxIterationsGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tabuSearchLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(maxIterationsGeneticField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(populationSizeGenetic))
                                        .addGap(127, 127, 127))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(fitnessCurveGeneticButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showSolutionGeneticButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mutationProbaGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fitnessChoosenGeneticLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fitnessChoosenGenetic, 0, 147, Short.MAX_VALUE)
                                    .addComponent(mutationProbability))))
                        .addGap(0, 236, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(runGenetic)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(bestFitnessGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bestFitnessGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(executionTimeGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68)
                                        .addComponent(executionTimeGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(withSolutionTabuLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(solutionGenetic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabuSearchLabel1)
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxIterationsGeneticField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxIterationsGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(populationSizeGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(populationSizeGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mutationProbaGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mutationProbability, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fitnessChoosenGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fitnessChoosenGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(runGenetic)
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executionTimeGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(executionTimeGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bestFitnessGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(withSolutionTabuLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionGenetic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bestFitnessGeneticLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fitnessCurveGeneticButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showSolutionGeneticButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        populationSizeGenetic.setText(Integer.toString(Genetic.POPULATION_SIZE));
        maxIterationsGeneticField.setText(Integer.toString(Genetic.MAX_ITERATIONS));
        mutationProbability.setText(Integer.toString(Genetic.MUTATION_PROBABILITY));
        fitnessChoosenAnnealing.setSelectedItem(SimulatingAnnealing.FITNESS_TYPE);

        methodPane.addTab("Genetic Algorithm", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(methodPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chessSizeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chessSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chessSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chessSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(methodPane)
                .addContainerGap())
        );

        chessSizeField.setText(Integer.toString(8));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void maxIterationsAnnealingFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_maxIterationsAnnealingFieldActionPerformed
    {//GEN-HEADEREND:event_maxIterationsAnnealingFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxIterationsAnnealingFieldActionPerformed

    private void runAnnealingActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_runAnnealingActionPerformed
    {//GEN-HEADEREND:event_runAnnealingActionPerformed
        long time = System.currentTimeMillis();
        Chessboard chessSol = SimulatingAnnealing.execute(Integer.parseInt(this.chessSizeField.getText()), Integer.parseInt(this.maxIterationsAnnealingField.getText()),
                Float.parseFloat(this.temperatureThresholdField.getText()), Float.parseFloat(this.temperatureVariationMulField.getText()), 
                Float.parseFloat(acceptanceProba.getText()),(FitnessEnum)this.fitnessChoosenAnnealing.getSelectedItem());
        time = System.currentTimeMillis() - time;
        this.fillResults(time, chessSol);
        fitnessCurveAnnealingButton.setEnabled(true);
        showSolutionAnnealingButton.setEnabled(chessSol.getColumns().length <= 35);         
        lastResult = chessSol;
    }//GEN-LAST:event_runAnnealingActionPerformed

    private void maxIterationsTabuFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_maxIterationsTabuFieldActionPerformed
    {//GEN-HEADEREND:event_maxIterationsTabuFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxIterationsTabuFieldActionPerformed

    private void runTabuActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_runTabuActionPerformed
    {//GEN-HEADEREND:event_runTabuActionPerformed
        long time = System.currentTimeMillis();
        Chessboard chessSol = TabuSearch.execute(Integer.parseInt(this.chessSizeField.getText()), Integer.parseInt(this.tabuListSizeField.getText()),
                Integer.parseInt(this.maxIterationsTabuField.getText()), (FitnessEnum)this.fitnessChoosenTabu.getSelectedItem());
        time = System.currentTimeMillis() - time;
        this.fillResults(time, chessSol);
        fitnessCurveTabuButton.setEnabled(true);
        showSolutionTabuButton.setEnabled(chessSol.getColumns().length <= 35);         
        lastResult = chessSol;
    }//GEN-LAST:event_runTabuActionPerformed

    private void maxIterationsGeneticFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_maxIterationsGeneticFieldActionPerformed
    {//GEN-HEADEREND:event_maxIterationsGeneticFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxIterationsGeneticFieldActionPerformed

    private void runGeneticActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_runGeneticActionPerformed
    {//GEN-HEADEREND:event_runGeneticActionPerformed
        long time = System.currentTimeMillis();
        Chessboard chessSol = GeneticImproved.execute(Integer.parseInt(this.chessSizeField.getText()), Integer.parseInt(this.populationSizeGenetic.getText()),
                Integer.parseInt(this.maxIterationsGeneticField.getText()), (FitnessEnum)this.fitnessChoosenTabu.getSelectedItem(), 
                Integer.parseInt(mutationProbability.getText()));
        time = System.currentTimeMillis() - time;
        this.fillResults(time, chessSol);
        fitnessCurveGeneticButton.setEnabled(true);
        showSolutionGeneticButton.setEnabled(chessSol.getColumns().length <= 35);         
        lastResult = chessSol;
    }//GEN-LAST:event_runGeneticActionPerformed

    private void fitnessCurveAnnealingButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fitnessCurveAnnealingButtonActionPerformed
    {//GEN-HEADEREND:event_fitnessCurveAnnealingButtonActionPerformed
        showCurve("Simulated Annealing fitness evolution", SimulatingAnnealing.steps);
    }//GEN-LAST:event_fitnessCurveAnnealingButtonActionPerformed

    private void showSolutionAnnealingButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showSolutionAnnealingButtonActionPerformed
    {//GEN-HEADEREND:event_showSolutionAnnealingButtonActionPerformed
        showSolution();
    }//GEN-LAST:event_showSolutionAnnealingButtonActionPerformed

    private void fitnessCurveGeneticButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fitnessCurveGeneticButtonActionPerformed
    {//GEN-HEADEREND:event_fitnessCurveGeneticButtonActionPerformed
        showCurve("Genetic algorithm fitness evolution (mean for each generation)", Genetic.steps);
    }//GEN-LAST:event_fitnessCurveGeneticButtonActionPerformed

    private void showSolutionGeneticButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showSolutionGeneticButtonActionPerformed
    {//GEN-HEADEREND:event_showSolutionGeneticButtonActionPerformed
        showSolution();
    }//GEN-LAST:event_showSolutionGeneticButtonActionPerformed

    private void fitnessCurveTabuButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fitnessCurveTabuButtonActionPerformed
    {//GEN-HEADEREND:event_fitnessCurveTabuButtonActionPerformed
        showCurve("Tabu search fitness evolution", TabuSearch.steps);
    }//GEN-LAST:event_fitnessCurveTabuButtonActionPerformed

    private void showSolutionTabuButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showSolutionTabuButtonActionPerformed
    {//GEN-HEADEREND:event_showSolutionTabuButtonActionPerformed
        showSolution();
    }//GEN-LAST:event_showSolutionTabuButtonActionPerformed

    private void acceptanceProbaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_acceptanceProbaActionPerformed
    {//GEN-HEADEREND:event_acceptanceProbaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptanceProbaActionPerformed
   
    private void showCurve(String name, ArrayList<Point> steps)
    {
        Curve curve = new Curve(name, "Iteration", "Fitness", steps, this);
        curve.setVisible(true); 
    }
    
    private void showSolution()
    {
        SolutionDisplay solutionView = new SolutionDisplay(lastResult, this);
        solutionView.setVisible(true);
    }
    
    private void fillResults(long executionTime, Chessboard solution)
    {
        switch (this.methodPane.getSelectedIndex())
        {
            case 0:
                this.executionTimeAnnealing.setText(executionTime+" ms");
                this.bestFitnessAnnealing.setText(Integer.toString(solution.getFitness()));
                this.solutionAnnealing.setText(solution.toString());
                break;
            case 1:
                this.executionTimeTabu.setText(executionTime+" ms");
                this.bestFitnessTabu.setText(Integer.toString(solution.getFitness()));
                this.solutionTabu.setText(solution.toString());
                break;
            case 2:
                this.executionTimeGenetic.setText(executionTime+" ms");
                this.bestFitnessGenetic.setText(Integer.toString(solution.getFitness()));
                this.solutionGenetic.setText(solution.toString());
                break;
            default:
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acceptanceProba;
    private javax.swing.JLabel acceptanceProbaLabel;
    private javax.swing.JPanel annealingPanel;
    private javax.swing.JLabel bestFitnessAnnealing;
    private javax.swing.JLabel bestFitnessAnnealingLabel;
    private javax.swing.JLabel bestFitnessGenetic;
    private javax.swing.JLabel bestFitnessGeneticLabel;
    private javax.swing.JLabel bestFitnessTabu;
    private javax.swing.JLabel bestFitnessTabuLabel;
    private javax.swing.JTextField chessSizeField;
    private javax.swing.JLabel chessSizeLabel;
    private javax.swing.JLabel executionTimeAnnealing;
    private javax.swing.JLabel executionTimeAnnealingLabel;
    private javax.swing.JLabel executionTimeGenetic;
    private javax.swing.JLabel executionTimeGeneticLabel;
    private javax.swing.JLabel executionTimeTabu;
    private javax.swing.JLabel executionTimeTabuLabel;
    private javax.swing.JComboBox<FitnessEnum> fitnessChoosenAnnealing;
    private javax.swing.JLabel fitnessChoosenAnnealingLabel;
    private javax.swing.JComboBox<FitnessEnum> fitnessChoosenGenetic;
    private javax.swing.JLabel fitnessChoosenGeneticLabel;
    private javax.swing.JComboBox<FitnessEnum> fitnessChoosenTabu;
    private javax.swing.JLabel fitnessChoosenTabuLabel;
    private javax.swing.JButton fitnessCurveAnnealingButton;
    private javax.swing.JButton fitnessCurveGeneticButton;
    private javax.swing.JButton fitnessCurveTabuButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField maxIterationsAnnealingField;
    private javax.swing.JLabel maxIterationsAnnealingLabel;
    private javax.swing.JTextField maxIterationsGeneticField;
    private javax.swing.JLabel maxIterationsGeneticLabel;
    private javax.swing.JTextField maxIterationsTabuField;
    private javax.swing.JLabel maxIterationsTabuLabel;
    private javax.swing.JTabbedPane methodPane;
    private javax.swing.JLabel mutationProbaGeneticLabel;
    private javax.swing.JTextField mutationProbability;
    private javax.swing.JTextField populationSizeGenetic;
    private javax.swing.JLabel populationSizeGeneticLabel;
    private javax.swing.JButton runAnnealing;
    private javax.swing.JButton runGenetic;
    private javax.swing.JButton runTabu;
    private javax.swing.JButton showSolutionAnnealingButton;
    private javax.swing.JButton showSolutionGeneticButton;
    private javax.swing.JButton showSolutionTabuButton;
    private javax.swing.JLabel simuAnnealingLabel;
    private javax.swing.JLabel solutionAnnealing;
    private javax.swing.JLabel solutionGenetic;
    private javax.swing.JLabel solutionTabu;
    private javax.swing.JTextField tabuListSizeField;
    private javax.swing.JLabel tabuListSizeLabel;
    private javax.swing.JLabel tabuSearchLabel;
    private javax.swing.JLabel tabuSearchLabel1;
    private javax.swing.JTextField temperatureThresholdField;
    private javax.swing.JLabel temperatureThresholdLabel;
    private javax.swing.JTextField temperatureVariationMulField;
    private javax.swing.JLabel temperatureVariationMulLabel;
    private javax.swing.JLabel withSolutionAnnealingLabel;
    private javax.swing.JLabel withSolutionTabuLabel;
    private javax.swing.JLabel withSolutionTabuLabel1;
    // End of variables declaration//GEN-END:variables
}
